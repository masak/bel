#!/usr/bin/perl
use 5.006;
use strict;
use warnings;

use Language::Bel;
use Language::Bel::Reader qw(
    read_partial
);
use Language::Bel::Expander::Bquote qw(
    _bqexpand
);

binmode STDOUT, ':encoding(utf-8)';

sub prompt {
    my ($prompt) = @_;

    print($prompt);
    my $input = <>;
    return $input;
}

if (@ARGV == 1) {
    my ($source_file) = $ARGV[0];
    eval_file($source_file);
}
else {
    repl();
}

sub eval_file {
    my ($source_file) = @_;

    my $b = Language::Bel->new();

    my $source;
    {
        local $/;
        open my $fh, '<', $source_file
            or die "can't open $source_file for reading: $!";
        $source = <$fh>;
    }

    while ($source) {
        my $p = read_partial($source);
        my $ast = _bqexpand($p->{ast});
        my $next_pos = $p->{pos};

        $b->eval($ast);

        $source = substr($source, $next_pos);
        $source =~ s/^\s+//;
    }
}

sub repl {
    my $b = Language::Bel->new();

    print("Language::Bel ", $Language::Bel::VERSION, " -- $^O.\n");
    while (defined (my $expr = prompt("> "))) {
        next if $expr =~ /^\s*;?/;

        eval {
            $b->read_eval_print($expr);
        };
        if ($@) {
            print($@);
        }
    }
}
